apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

// Firebase.
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

import java.util.regex.Pattern

def outDir = project.getLayout().getBuildDirectory()

android {
    compileSdk 34

    buildFeatures {
        buildConfig true
    }

    defaultConfig {
        applicationId "com.fezrestia.android.webviewwindow"
        minSdk 31
        targetSdk 34
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildTypes {
        release {
            minifyEnabled false
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
        }
    }

    // Define APK name and replace.
    applicationVariants.configureEach { variant ->
        variant.outputs.each { output ->
            if (output.outputFileName.endsWith(".apk")) {
                def name = getArchivesBaseName()
                def ver = variant.versionName

                if (variant.name == "release") {
                    output.outputFileName = "${name}_${ver}.apk"
                }
            }
        }
    }

    productFlavors {
    }
    lint {
        htmlOutput file("$outDir/reports/test-results-lint.html")
        lintConfig file('lint.xml')
        xmlOutput file("$outDir/reports/test-results-lint.xml")
    }
    ndkVersion '26.1.10909125'
    namespace 'com.fezrestia.android.webviewwindow'

    incrementVersionCode()
}

def incrementVersionCode() {
    def file = file("src/main/AndroidManifest.xml")
    def text = file.getText()

    // Update version code.
    def codePattern = Pattern.compile("android:versionCode=\"(\\d+)\"")
    def codeMatcher = codePattern.matcher(text)
    codeMatcher.find()
    def code = Integer.parseInt(codeMatcher.group(1))
    def newCode = code + 1
    def codeUpdatedText = codeMatcher.replaceAll("android:versionCode=\"" + newCode + "\"")

    // Update version name.
    def namePattern = Pattern.compile("android:versionName=\"(\\d+)\\.(\\d+)\\.(\\d+)-\\d+\"")
    def nameMatcher = namePattern.matcher(codeUpdatedText)
    nameMatcher.find()
    def major = Integer.parseInt(nameMatcher.group(1))
    def minor = Integer.parseInt(nameMatcher.group(2))
    def patch = Integer.parseInt(nameMatcher.group(3))
    def newName = "android:versionName=\"" + major + "." + minor + "." + patch + "-" + newCode + "\""
    def nameUpdatedText = nameMatcher.replaceAll(newName)

    file.write(nameUpdatedText)
}

dependencies {
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:2.0.21'
    implementation 'androidx.browser:browser:1.8.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    implementation 'commons-validator:commons-validator:1.9.0'
    implementation 'androidx.activity:activity-ktx:1.9.3'
    implementation 'androidx.fragment:fragment-ktx:1.8.5'
    implementation 'androidx.appcompat:appcompat:1.7.0'

    // Firebase.
    implementation platform('com.google.firebase:firebase-bom:33.5.1')
    implementation 'com.google.firebase:firebase-analytics-ktx:22.1.2'
    implementation 'com.google.firebase:firebase-crashlytics-ktx:19.2.1'
}

repositories {
    google()
    mavenCentral()
}
